name: Go CI

on:
  push:
    branches:
      - main  # или другая ветка, которую вы используете
  pull_request:
    branches:
      - main  # или другая ветка, которую вы используете

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Проверка репозитория
        uses: actions/checkout@v2

      - name: Установка Yarn
        run: |
          curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
          echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
          sudo apt-get update && sudo apt-get install yarn

      - name: Установка зависимостей для React
        run: |
          cd ./react-app
          yarn install   # Установка зависимостей
          yarn test      # Запуск тестов
      #   yarn lint      # Запуск тестов

      - name: Установка Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            ca-certificates \
            curl \
            gnupg \
            lsb-release \
            software-properties-common
          
          echo "deb [arch=$(dpkg --print-architecture)] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - 
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose

      - name: Логин в Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Замените на ваш секрет
          password: ${{ secrets.DOCKER_PASSWORD }}  # Замените на ваш секрет

      - name: Сборка Docker образов
        run: docker-compose -f docker-composeWeb.yml build --no-cache

      - name: Проверка существующих образов
        run: docker images

      # Отправка образов в Docker Hub
      - name: Отправка образов в Docker Hub
        run: |
          # Отправляем образ для Go-сервера
          docker tag ppo_bmstu_go-server:latest lalalala0/ppo_bmstu-go-server:latest
          docker push lalalala0/ppo_bmstu-go-server:latest
          
          # Отправляем образ для React UI
          docker tag ppo_bmstu_react-ui:latest lalalala0/ppo_bmstu-react-ui:latest
          docker push lalalala0/ppo_bmstu-react-ui:latest

          # Отправляем кастомный образ PostgreSQL
          docker tag ppo_bmstu_postgres:latest lalalala0/ppo_bmstu-postgres-db:latest
          docker push lalalala0/ppo_bmstu-postgres-db:latest
